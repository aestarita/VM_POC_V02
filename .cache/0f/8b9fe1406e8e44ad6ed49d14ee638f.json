{"id":"node_modules/@snap/camera-kit/lib/logger/logEntries.js","dependencies":[{"name":"C:\\Users\\aesta\\Documents\\GitHub\\VM_POC_V02\\node_modules\\@snap\\camera-kit\\lib\\logger\\logEntries.js.map","includedInParent":true,"mtime":1689894620984},{"name":"C:\\Users\\aesta\\Documents\\GitHub\\VM_POC_V02\\package.json","includedInParent":true,"mtime":1689971043690},{"name":"C:\\Users\\aesta\\Documents\\GitHub\\VM_POC_V02\\node_modules\\@snap\\camera-kit\\package.json","includedInParent":true,"mtime":1689894620849},{"name":"../dependency-injection/Injectable","loc":{"line":1,"column":27,"index":27},"parent":"C:\\Users\\aesta\\Documents\\GitHub\\VM_POC_V02\\node_modules\\@snap\\camera-kit\\lib\\logger\\logEntries.js","resolved":"C:\\Users\\aesta\\Documents\\GitHub\\VM_POC_V02\\node_modules\\@snap\\camera-kit\\lib\\dependency-injection\\Injectable.js"},{"name":"./logger","loc":{"line":2,"column":27,"index":92},"parent":"C:\\Users\\aesta\\Documents\\GitHub\\VM_POC_V02\\node_modules\\@snap\\camera-kit\\lib\\logger\\logEntries.js","resolved":"C:\\Users\\aesta\\Documents\\GitHub\\VM_POC_V02\\node_modules\\@snap\\camera-kit\\lib\\logger\\logger.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.logEntriesFactory = void 0;\nvar _Injectable = require(\"../dependency-injection/Injectable\");\nvar _logger = require(\"./logger\");\n/**\n * The factory creates new logEntries subject.\n *\n * NOTE: The factory calls `initLogger()`, which overrides the global `logEntrySubject`.\n * This is currently necessary to avoid sharing the same subject between multiple `CameraKit` instances.\n * In the future, we may throw an error when bootstrapping more than a single `CameraKit`,\n * that will allow us to have a single log entry subject.\n *\n * @internal\n */\nconst logEntriesFactory = (0, _Injectable.Injectable)(\"logEntries\", () => (0, _logger.initLogger)().asObservable());\nexports.logEntriesFactory = logEntriesFactory;"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/logger/logEntries.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":0}},{"source":"../../src/logger/logEntries.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":4}},{"source":"../../src/logger/logEntries.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":15}},{"source":"../../src/logger/logEntries.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":18}},{"source":"../../src/logger/logEntries.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":25}},{"source":"../../src/logger/logEntries.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":8,"column":0}},{"source":"../../src/logger/logEntries.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":8,"column":4}},{"source":"../../src/logger/logEntries.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":8,"column":11}},{"source":"../../src/logger/logEntries.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":8,"column":14}},{"source":"../../src/logger/logEntries.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":8,"column":21}},{"source":"../../src/logger/logEntries.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":9,"column":0}},{"source":"../../src/logger/logEntries.ts","name":null,"original":{"line":14,"column":7},"generated":{"line":19,"column":0}},{"source":"../../src/logger/logEntries.ts","name":null,"original":{"line":14,"column":13},"generated":{"line":19,"column":6}},{"source":"../../src/logger/logEntries.ts","name":null,"original":{"line":14,"column":30},"generated":{"line":19,"column":23}},{"source":"../../src/logger/logEntries.ts","name":null,"original":{"line":14,"column":33},"generated":{"line":19,"column":26}},{"source":"../../src/logger/logEntries.ts","name":null,"original":{"line":14,"column":33},"generated":{"line":19,"column":30}},{"source":"../../src/logger/logEntries.ts","name":null,"original":{"line":14,"column":43},"generated":{"line":19,"column":52}},{"source":"../../src/logger/logEntries.ts","name":null,"original":{"line":14,"column":44},"generated":{"line":19,"column":54}},{"source":"../../src/logger/logEntries.ts","name":null,"original":{"line":14,"column":56},"generated":{"line":19,"column":66}},{"source":"../../src/logger/logEntries.ts","name":null,"original":{"line":14,"column":58},"generated":{"line":19,"column":68}},{"source":"../../src/logger/logEntries.ts","name":null,"original":{"line":14,"column":64},"generated":{"line":19,"column":74}},{"source":"../../src/logger/logEntries.ts","name":null,"original":{"line":14,"column":64},"generated":{"line":19,"column":78}},{"source":"../../src/logger/logEntries.ts","name":null,"original":{"line":14,"column":74},"generated":{"line":19,"column":96}},{"source":"../../src/logger/logEntries.ts","name":null,"original":{"line":14,"column":74},"generated":{"line":19,"column":98}},{"source":"../../src/logger/logEntries.ts","name":null,"original":{"line":14,"column":76},"generated":{"line":19,"column":99}},{"source":"../../src/logger/logEntries.ts","name":null,"original":{"line":14,"column":77},"generated":{"line":19,"column":100}},{"source":"../../src/logger/logEntries.ts","name":null,"original":{"line":14,"column":89},"generated":{"line":19,"column":112}},{"source":"../../src/logger/logEntries.ts","name":null,"original":{"line":14,"column":89},"generated":{"line":19,"column":113}},{"source":"../../src/logger/logEntries.ts","name":null,"original":{"line":14,"column":91},"generated":{"line":19,"column":114}},{"source":"../../src/logger/logEntries.ts","name":null,"original":{"line":14,"column":92},"generated":{"line":19,"column":115}},{"source":"../../src/logger/logEntries.ts","name":null,"original":{"line":14,"column":93},"generated":{"line":20,"column":0}},{"source":"../../src/logger/logEntries.ts","name":null,"original":{"line":14,"column":93},"generated":{"line":20,"column":7}},{"source":"../../src/logger/logEntries.ts","name":null,"original":{"line":14,"column":93},"generated":{"line":20,"column":8}},{"source":"../../src/logger/logEntries.ts","name":null,"original":{"line":14,"column":93},"generated":{"line":20,"column":25}},{"source":"../../src/logger/logEntries.ts","name":null,"original":{"line":14,"column":93},"generated":{"line":20,"column":28}},{"source":"../../src/logger/logEntries.ts","name":null,"original":{"line":14,"column":93},"generated":{"line":20,"column":45}}],"sources":{"../../src/logger/logEntries.ts":"import { Injectable } from \"../dependency-injection/Injectable\";\nimport { initLogger } from \"./logger\";\n\n/**\n * The factory creates new logEntries subject.\n *\n * NOTE: The factory calls `initLogger()`, which overrides the global `logEntrySubject`.\n * This is currently necessary to avoid sharing the same subject between multiple `CameraKit` instances.\n * In the future, we may throw an error when bootstrapping more than a single `CameraKit`,\n * that will allow us to have a single log entry subject.\n *\n * @internal\n */\nexport const logEntriesFactory = Injectable(\"logEntries\", () => initLogger().asObservable());\n"},"lineCount":null}},"error":null,"hash":"70fd048e3a29acedf8e731222e8ed994","cacheData":{"env":{}}}