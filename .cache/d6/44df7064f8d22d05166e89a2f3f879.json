{"id":"node_modules/@snap/state-management/dist/actions.js","dependencies":[{"name":"C:\\Users\\aesta\\Documents\\GitHub\\VM_POC_V02\\package.json","includedInParent":true,"mtime":1689971043690},{"name":"C:\\Users\\aesta\\Documents\\GitHub\\VM_POC_V02\\node_modules\\@snap\\state-management\\package.json","includedInParent":true,"mtime":1689894620419},{"name":"rxjs","loc":{"line":1,"column":23,"index":23},"parent":"C:\\Users\\aesta\\Documents\\GitHub\\VM_POC_V02\\node_modules\\@snap\\state-management\\dist\\actions.js","resolved":"C:\\Users\\aesta\\Documents\\GitHub\\VM_POC_V02\\node_modules\\rxjs\\dist\\esm5\\index.js"},{"name":"./types","loc":{"line":2,"column":28,"index":59},"parent":"C:\\Users\\aesta\\Documents\\GitHub\\VM_POC_V02\\node_modules\\@snap\\state-management\\dist\\actions.js","resolved":"C:\\Users\\aesta\\Documents\\GitHub\\VM_POC_V02\\node_modules\\@snap\\state-management\\dist\\types.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.defineActions = exports.defineAction = void 0;\nexports.forActions = forActions;\nexports.isAction = isAction;\nvar _rxjs = require(\"rxjs\");\nvar _types = require(\"./types\");\n/**\n * Define an Action by providing a name and (optionally) the type of data the Action carries. Returns a function which\n * creates actions of that type.\n *\n * @param name The action's name, should be unique among all actions used by a single state machine.\n * @returns The function returned is used to specify the type of data the Action carries – it must be called to return\n * the actual action creator, which is then strongly typed.\n */\nconst defineAction = name => () => {\n  const actionCreator = data => ({\n    name,\n    data\n  });\n  Object.defineProperty(actionCreator, 'name', {\n    value: name\n  });\n  // Safety: Object.defineProperty has added the `name` property, but the TS compiler doesn't know that.\n  return actionCreator;\n};\n/**\n * Create an object from action creators, where each property is the name of the action.\n *\n * @param actions Pass one or more actions as arguments, using [[defineAction]] to create each action.\n * @returns\n */\nexports.defineAction = defineAction;\nconst defineActions = (...actions) => {\n  const entries = actions.map(s => [s.name, s]);\n  // Safety: TS isn't able to infer that keys are the action names, so we have to cast – but we're just extracting the\n  // name property and using it as the key (we're doing no other manipulation), so we know we'll end up with the\n  // correct ActionCreatorMap.\n  return (0, _types.fromEntries)(entries);\n};\n/**\n * Filter an `Observable<[Action, State]>` to only emit when the action matches one of the action names given as\n * arguments.\n * ```ts\n * myStateMachine.pipe(\n *   forActions('myFirstAction', 'mySecondAction'),\n * ).subscribe(doSomethingOnEitherAction)\n * ```\n *\n * @param actions Pass one or more action names as arguments, used to filter an `Observable<[Action, State]>`\n * @returns\n */\nexports.defineActions = defineActions;\nfunction forActions(...actions) {\n  return (0, _rxjs.filter)(v => actions.some(action => v[0].name === action));\n}\n/**\n * Determine if a given action is of a specific type, given by an action name. This narrows the type of the action.\n *\n * @param action An action with a broad type (e.g. a union of many actions)\n * @param name The name of a specific action.\n * @returns Narrows the type of the action argument to that action which has the given name.\n */\nfunction isAction(action, name) {\n  return action.name === name;\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":9,"column":0},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":1,"column":0}},{"generated":{"line":9,"column":4},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":1,"column":0},"name":"_rxjs"},{"generated":{"line":9,"column":9},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":1,"column":0}},{"generated":{"line":9,"column":12},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":1,"column":0},"name":"require"},{"generated":{"line":9,"column":19},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":2,"column":0}},{"generated":{"line":10,"column":4},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":2,"column":0},"name":"_types"},{"generated":{"line":10,"column":10},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":2,"column":0}},{"generated":{"line":10,"column":13},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":2,"column":0},"name":"require"},{"generated":{"line":10,"column":20},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":2,"column":0}},{"generated":{"line":11,"column":0},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":3,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":4,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":5,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":6,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":7,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":8,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":9,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":10,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":11,"column":7}},{"generated":{"line":19,"column":6},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":11,"column":13},"name":"defineAction"},{"generated":{"line":19,"column":18},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":11,"column":25}},{"generated":{"line":19,"column":21},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":11,"column":29},"name":"name"},{"generated":{"line":19,"column":25},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":11,"column":33}},{"generated":{"line":19,"column":29},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":11,"column":38}},{"generated":{"line":19,"column":35},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":11,"column":44}},{"generated":{"line":20,"column":2},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":12,"column":4}},{"generated":{"line":20,"column":8},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":12,"column":10},"name":"actionCreator"},{"generated":{"line":20,"column":21},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":12,"column":23}},{"generated":{"line":20,"column":24},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":12,"column":27},"name":"data"},{"generated":{"line":20,"column":28},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":12,"column":31}},{"generated":{"line":20,"column":33},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":12,"column":37}},{"generated":{"line":21,"column":4},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":13,"column":8},"name":"name"},{"generated":{"line":21,"column":8},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":13,"column":12}},{"generated":{"line":22,"column":4},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":14,"column":8},"name":"data"},{"generated":{"line":23,"column":2},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":15,"column":4}},{"generated":{"line":23,"column":3},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":15,"column":5}},{"generated":{"line":23,"column":4},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":15,"column":6}},{"generated":{"line":24,"column":2},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":16,"column":4},"name":"Object"},{"generated":{"line":24,"column":8},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":16,"column":10}},{"generated":{"line":24,"column":9},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":16,"column":11},"name":"defineProperty"},{"generated":{"line":24,"column":23},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":16,"column":25}},{"generated":{"line":24,"column":24},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":16,"column":26},"name":"actionCreator"},{"generated":{"line":24,"column":37},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":16,"column":39}},{"generated":{"line":24,"column":39},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":16,"column":41}},{"generated":{"line":24,"column":45},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":16,"column":47}},{"generated":{"line":24,"column":47},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":16,"column":49}},{"generated":{"line":25,"column":4},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":16,"column":51},"name":"value"},{"generated":{"line":25,"column":9},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":16,"column":56}},{"generated":{"line":25,"column":11},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":16,"column":58},"name":"name"},{"generated":{"line":26,"column":2},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":16,"column":63}},{"generated":{"line":26,"column":3},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":16,"column":64}},{"generated":{"line":26,"column":4},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":16,"column":65}},{"generated":{"line":27,"column":2},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":17,"column":4}},{"generated":{"line":28,"column":2},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":18,"column":4}},{"generated":{"line":28,"column":9},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":18,"column":11},"name":"actionCreator"},{"generated":{"line":28,"column":22},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":18,"column":24}},{"generated":{"line":29,"column":0},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":19,"column":0}},{"generated":{"line":29,"column":1},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":19,"column":1}},{"generated":{"line":30,"column":0},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":20,"column":0}},{"generated":{"line":31,"column":0},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":21,"column":0}},{"generated":{"line":32,"column":0},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":22,"column":0}},{"generated":{"line":33,"column":0},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":23,"column":0}},{"generated":{"line":34,"column":0},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":24,"column":0}},{"generated":{"line":35,"column":0},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":25,"column":0}},{"generated":{"line":36,"column":0},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":20,"column":0},"name":"exports"},{"generated":{"line":36,"column":7},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":20,"column":0}},{"generated":{"line":36,"column":8},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":20,"column":0},"name":"defineAction"},{"generated":{"line":36,"column":20},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":20,"column":0}},{"generated":{"line":36,"column":23},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":20,"column":0},"name":"defineAction"},{"generated":{"line":36,"column":35},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":20,"column":0}},{"generated":{"line":37,"column":0},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":26,"column":7}},{"generated":{"line":37,"column":6},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":26,"column":13},"name":"defineActions"},{"generated":{"line":37,"column":19},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":26,"column":26}},{"generated":{"line":37,"column":22},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":26,"column":29},"name":"defineActions"},{"generated":{"line":37,"column":23},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":26,"column":30}},{"generated":{"line":37,"column":26},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":26,"column":33},"name":"actions"},{"generated":{"line":37,"column":33},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":26,"column":40}},{"generated":{"line":37,"column":38},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":26,"column":45}},{"generated":{"line":38,"column":2},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":27,"column":4}},{"generated":{"line":38,"column":8},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":27,"column":10},"name":"entries"},{"generated":{"line":38,"column":15},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":27,"column":17}},{"generated":{"line":38,"column":18},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":27,"column":20},"name":"actions"},{"generated":{"line":38,"column":25},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":27,"column":27}},{"generated":{"line":38,"column":26},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":27,"column":28},"name":"map"},{"generated":{"line":38,"column":29},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":27,"column":31}},{"generated":{"line":38,"column":30},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":27,"column":33},"name":"s"},{"generated":{"line":38,"column":31},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":27,"column":34}},{"generated":{"line":38,"column":35},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":27,"column":39}},{"generated":{"line":38,"column":36},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":27,"column":40},"name":"s"},{"generated":{"line":38,"column":37},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":27,"column":41}},{"generated":{"line":38,"column":38},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":27,"column":42},"name":"name"},{"generated":{"line":38,"column":42},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":27,"column":46}},{"generated":{"line":38,"column":44},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":27,"column":48},"name":"s"},{"generated":{"line":38,"column":45},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":27,"column":49}},{"generated":{"line":38,"column":46},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":27,"column":50}},{"generated":{"line":38,"column":47},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":27,"column":51}},{"generated":{"line":39,"column":2},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":28,"column":4}},{"generated":{"line":40,"column":2},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":29,"column":4}},{"generated":{"line":41,"column":2},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":30,"column":4}},{"generated":{"line":42,"column":2},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":31,"column":4}},{"generated":{"line":42,"column":9},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":31,"column":11}},{"generated":{"line":42,"column":13},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":31,"column":11},"name":"fromEntries"},{"generated":{"line":42,"column":31},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":31,"column":22}},{"generated":{"line":42,"column":33},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":31,"column":23},"name":"entries"},{"generated":{"line":42,"column":40},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":31,"column":30}},{"generated":{"line":42,"column":41},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":31,"column":31}},{"generated":{"line":43,"column":0},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":32,"column":0}},{"generated":{"line":43,"column":1},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":32,"column":1}},{"generated":{"line":44,"column":0},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":33,"column":0}},{"generated":{"line":45,"column":0},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":34,"column":0}},{"generated":{"line":46,"column":0},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":35,"column":0}},{"generated":{"line":47,"column":0},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":36,"column":0}},{"generated":{"line":48,"column":0},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":37,"column":0}},{"generated":{"line":49,"column":0},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":38,"column":0}},{"generated":{"line":50,"column":0},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":39,"column":0}},{"generated":{"line":51,"column":0},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":40,"column":0}},{"generated":{"line":52,"column":0},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":41,"column":0}},{"generated":{"line":53,"column":0},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":42,"column":0}},{"generated":{"line":54,"column":0},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":43,"column":0}},{"generated":{"line":55,"column":0},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":44,"column":0}},{"generated":{"line":56,"column":0},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":33,"column":0},"name":"exports"},{"generated":{"line":56,"column":7},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":33,"column":0}},{"generated":{"line":56,"column":8},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":33,"column":0},"name":"defineActions"},{"generated":{"line":56,"column":21},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":33,"column":0}},{"generated":{"line":56,"column":24},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":33,"column":0},"name":"defineActions"},{"generated":{"line":56,"column":37},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":33,"column":0}},{"generated":{"line":57,"column":0},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":45,"column":7}},{"generated":{"line":57,"column":9},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":45,"column":16},"name":"forActions"},{"generated":{"line":57,"column":19},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":45,"column":26},"name":"forActions"},{"generated":{"line":57,"column":20},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":45,"column":27}},{"generated":{"line":57,"column":23},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":45,"column":30},"name":"actions"},{"generated":{"line":57,"column":30},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":45,"column":37}},{"generated":{"line":57,"column":32},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":45,"column":39}},{"generated":{"line":58,"column":2},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":46,"column":4}},{"generated":{"line":58,"column":9},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":46,"column":11}},{"generated":{"line":58,"column":13},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":46,"column":11},"name":"filter"},{"generated":{"line":58,"column":25},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":46,"column":17}},{"generated":{"line":58,"column":27},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":46,"column":19},"name":"v"},{"generated":{"line":58,"column":28},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":46,"column":20}},{"generated":{"line":58,"column":32},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":46,"column":25},"name":"actions"},{"generated":{"line":58,"column":39},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":46,"column":32}},{"generated":{"line":58,"column":40},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":46,"column":33},"name":"some"},{"generated":{"line":58,"column":44},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":46,"column":37}},{"generated":{"line":58,"column":45},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":46,"column":38},"name":"action"},{"generated":{"line":58,"column":51},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":46,"column":44}},{"generated":{"line":58,"column":55},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":46,"column":48},"name":"v"},{"generated":{"line":58,"column":56},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":46,"column":49}},{"generated":{"line":58,"column":57},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":46,"column":50}},{"generated":{"line":58,"column":58},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":46,"column":51}},{"generated":{"line":58,"column":59},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":46,"column":52}},{"generated":{"line":58,"column":60},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":46,"column":53},"name":"name"},{"generated":{"line":58,"column":64},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":46,"column":57}},{"generated":{"line":58,"column":69},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":46,"column":62},"name":"action"},{"generated":{"line":58,"column":75},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":46,"column":68}},{"generated":{"line":58,"column":76},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":46,"column":69}},{"generated":{"line":58,"column":77},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":46,"column":70}},{"generated":{"line":59,"column":0},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":47,"column":0}},{"generated":{"line":60,"column":0},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":48,"column":0}},{"generated":{"line":61,"column":0},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":49,"column":0}},{"generated":{"line":62,"column":0},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":50,"column":0}},{"generated":{"line":63,"column":0},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":51,"column":0}},{"generated":{"line":64,"column":0},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":52,"column":0}},{"generated":{"line":65,"column":0},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":53,"column":0}},{"generated":{"line":66,"column":0},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":54,"column":0}},{"generated":{"line":67,"column":0},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":55,"column":7}},{"generated":{"line":67,"column":9},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":55,"column":16},"name":"isAction"},{"generated":{"line":67,"column":17},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":55,"column":24},"name":"isAction"},{"generated":{"line":67,"column":18},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":55,"column":25},"name":"action"},{"generated":{"line":67,"column":24},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":55,"column":31}},{"generated":{"line":67,"column":26},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":55,"column":33},"name":"name"},{"generated":{"line":67,"column":30},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":55,"column":37}},{"generated":{"line":67,"column":32},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":55,"column":39}},{"generated":{"line":68,"column":2},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":56,"column":4}},{"generated":{"line":68,"column":9},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":56,"column":11},"name":"action"},{"generated":{"line":68,"column":15},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":56,"column":17}},{"generated":{"line":68,"column":16},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":56,"column":18},"name":"name"},{"generated":{"line":68,"column":20},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":56,"column":22}},{"generated":{"line":68,"column":25},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":56,"column":27},"name":"name"},{"generated":{"line":68,"column":29},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":56,"column":31}},{"generated":{"line":69,"column":0},"source":"node_modules/@snap/state-management/dist/actions.js","original":{"line":57,"column":0}}],"sources":{"node_modules/@snap/state-management/dist/actions.js":"import { filter } from 'rxjs';\nimport { fromEntries } from './types';\n/**\n * Define an Action by providing a name and (optionally) the type of data the Action carries. Returns a function which\n * creates actions of that type.\n *\n * @param name The action's name, should be unique among all actions used by a single state machine.\n * @returns The function returned is used to specify the type of data the Action carries – it must be called to return\n * the actual action creator, which is then strongly typed.\n */\nexport const defineAction = (name) => () => {\n    const actionCreator = (data) => ({\n        name,\n        data,\n    });\n    Object.defineProperty(actionCreator, 'name', { value: name });\n    // Safety: Object.defineProperty has added the `name` property, but the TS compiler doesn't know that.\n    return actionCreator;\n};\n/**\n * Create an object from action creators, where each property is the name of the action.\n *\n * @param actions Pass one or more actions as arguments, using [[defineAction]] to create each action.\n * @returns\n */\nexport const defineActions = (...actions) => {\n    const entries = actions.map((s) => [s.name, s]);\n    // Safety: TS isn't able to infer that keys are the action names, so we have to cast – but we're just extracting the\n    // name property and using it as the key (we're doing no other manipulation), so we know we'll end up with the\n    // correct ActionCreatorMap.\n    return fromEntries(entries);\n};\n/**\n * Filter an `Observable<[Action, State]>` to only emit when the action matches one of the action names given as\n * arguments.\n * ```ts\n * myStateMachine.pipe(\n *   forActions('myFirstAction', 'mySecondAction'),\n * ).subscribe(doSomethingOnEitherAction)\n * ```\n *\n * @param actions Pass one or more action names as arguments, used to filter an `Observable<[Action, State]>`\n * @returns\n */\nexport function forActions(...actions) {\n    return filter((v) => actions.some(action => v[0].name === action));\n}\n/**\n * Determine if a given action is of a specific type, given by an action name. This narrows the type of the action.\n *\n * @param action An action with a broad type (e.g. a union of many actions)\n * @param name The name of a specific action.\n * @returns Narrows the type of the action argument to that action which has the given name.\n */\nexport function isAction(action, name) {\n    return action.name === name;\n}\n"},"lineCount":null}},"error":null,"hash":"b0269189d16ff81b54ed946bad7f91db","cacheData":{"env":{}}}