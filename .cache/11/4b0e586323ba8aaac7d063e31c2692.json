{"id":"node_modules/@snap/camera-kit/lib/dependency-injection/PartialContainer.js","dependencies":[{"name":"C:\\Users\\aesta\\Documents\\GitHub\\VM_POC_V02\\node_modules\\@snap\\camera-kit\\lib\\dependency-injection\\PartialContainer.js.map","includedInParent":true,"mtime":1689894621020},{"name":"C:\\Users\\aesta\\Documents\\GitHub\\VM_POC_V02\\package.json","includedInParent":true,"mtime":1689971043690},{"name":"C:\\Users\\aesta\\Documents\\GitHub\\VM_POC_V02\\node_modules\\@snap\\camera-kit\\package.json","includedInParent":true,"mtime":1689894620849},{"name":"../common/entries","loc":{"line":1,"column":24,"index":24},"parent":"C:\\Users\\aesta\\Documents\\GitHub\\VM_POC_V02\\node_modules\\@snap\\camera-kit\\lib\\dependency-injection\\PartialContainer.js","resolved":"C:\\Users\\aesta\\Documents\\GitHub\\VM_POC_V02\\node_modules\\@snap\\camera-kit\\lib\\common\\entries.js"},{"name":"../common/memoize","loc":{"line":2,"column":24,"index":69},"parent":"C:\\Users\\aesta\\Documents\\GitHub\\VM_POC_V02\\node_modules\\@snap\\camera-kit\\lib\\dependency-injection\\PartialContainer.js","resolved":"C:\\Users\\aesta\\Documents\\GitHub\\VM_POC_V02\\node_modules\\@snap\\camera-kit\\lib\\common\\memoize.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PartialContainer = void 0;\nvar _entries = require(\"../common/entries\");\nvar _memoize = require(\"../common/memoize\");\n/**\n * Similar to [Container], with the exception that Services may be provided to a PartialContainer which *does not*\n * contain all of that Services dependencies.\n *\n * For this to remain safe, Services can not be resolved by PartialContainer – it has no `get` method.\n *\n * Instead, the PartialContainer must be provided to a [Container] which *does* contain all the dependencies required\n * by all the Service in the PartialContainer. The resulting [Container] can then resolve these Services.\n *\n * PartialContainers are used to create a collection of Services which can then be provided via a simple one-line syntax\n * to an existing Container (which fulfills the collection's dependencies). It is an organizational tool, allowing\n * coherent groupings of Services to be defined in one place, then combined elsewhere to form a complete [Container].\n *\n * Here's an example of PartialContainer usage:\n * ```ts\n * // We can provide fooFactory, even though the PartialContainer doesn't fulfill the Bar dependency.\n * const fooFactory = Injectable('Foo', ['Bar'] as const, (bar: Bar) => new Foo(bar))\n * const partialContainer = new PartialContainer({}).provide(fooFactory)\n *\n * const barFactory = Injectable('Bar', () => new Bar())\n * const dependenciesContainer = Container.provides(barFactory)\n *\n * const combinedContainer = dependenciesContainer.provides(partialContainer)\n *\n * // We can resolve Foo, because the combined container includes Bar, so all of Foo's dependencies are now met.\n * const foo = combinedContainer.get('Foo')\n * ```\n */\n/** @internal */\nclass PartialContainer {\n  constructor(injectables) {\n    this.injectables = injectables;\n  }\n  /**\n   * Create a new PartialContainer which provides a Service created by the given InjectableFunction.\n   *\n   * The InjectableFunction contains metadata specifying the Token by which the created Service will be known, as well\n   * as an ordered list of Tokens to be resolved and provided to the InjectableFunction as arguments.\n   *\n   * This dependencies are allowed to be missing from the PartialContainer, but these dependencies are maintained as a\n   * parameter of the returned PartialContainer. This allows `[Container.provides]` to type check the dependencies and\n   * ensure they can be provided by the Container.\n   *\n   * @param fn A InjectableFunction, taking dependencies as arguments, which returns the Service.\n   */\n  provides(fn) {\n    return new PartialContainer(Object.assign(Object.assign({}, this.injectables), {\n      [fn.token]: fn\n    }));\n  }\n  /**\n   * In order to create a [Container], the InjectableFunctions maintained by the PartialContainer must be memoized\n   * into Factories that can resolve their dependencies and return the correct Service.\n   *\n   * In particular, this requires access to a \"parent\" Container to avoid infinite looping in cases where Service A\n   * depends on Service A – this is allowed (as long as the parent container provides Service A), but requires access\n   * to the parent Container to provide the parent implementation of Service A.\n   *\n   * This also means that Services provided by a PartialContainer to a Container via this function will always be\n   * scoped to the Container. In other words, if a PartialContainer containing Service A is provided to both\n   * Container X and Container Y, when Service A is resolved by Container X the InjectableFunction used to create\n   * Service A will be invoked – and when Service A is resolved by Container Y, the InjectableFunction will be invoked\n   * again.\n   *\n   * @param parent A [Container] which provides all the required Dependencies of this PartialContainer.\n   */\n  getFactories(parent) {\n    return Object.fromEntries((0, _entries.entries)(this.injectables).map(([token, fn]) => {\n      return [token, (0, _memoize.memoize)(c => {\n        return fn(...fn.dependencies.map(t => {\n          return t === token ? parent.get(t) : c.get(t);\n        }));\n      })];\n    }));\n  }\n  getTokens() {\n    return Object.keys(this.injectables);\n  }\n}\nexports.PartialContainer = PartialContainer;"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":0}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":4}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":12}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":15}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":22}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":8,"column":0}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":8,"column":4}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":8,"column":12}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":8,"column":15}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":8,"column":22}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":42,"column":0},"generated":{"line":9,"column":0}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":70,"column":0},"generated":{"line":37,"column":0}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":71,"column":6},"generated":{"line":38,"column":0}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":71,"column":13},"generated":{"line":38,"column":6}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":71,"column":29},"generated":{"line":38,"column":22}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":71,"column":29},"generated":{"line":38,"column":23}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":72,"column":4},"generated":{"line":39,"column":2}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":72,"column":4},"generated":{"line":39,"column":13}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":72,"column":33},"generated":{"line":39,"column":14}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":72,"column":81},"generated":{"line":39,"column":25}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":72,"column":81},"generated":{"line":39,"column":27}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":72,"column":33},"generated":{"line":40,"column":4}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":72,"column":33},"generated":{"line":40,"column":8}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":72,"column":33},"generated":{"line":40,"column":9}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":72,"column":44},"generated":{"line":40,"column":20}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":72,"column":33},"generated":{"line":40,"column":23}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":72,"column":44},"generated":{"line":40,"column":34}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":72,"column":84},"generated":{"line":41,"column":2}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":74,"column":4},"generated":{"line":42,"column":2}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":86,"column":4},"generated":{"line":54,"column":2}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":86,"column":12},"generated":{"line":54,"column":10}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":92,"column":8},"generated":{"line":54,"column":11}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":92,"column":85},"generated":{"line":54,"column":13}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":92,"column":85},"generated":{"line":54,"column":15}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":106,"column":8},"generated":{"line":55,"column":4}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":106,"column":15},"generated":{"line":55,"column":11}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":106,"column":19},"generated":{"line":55,"column":15}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":106,"column":35},"generated":{"line":55,"column":31}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":106,"column":36},"generated":{"line":55,"column":32}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":106,"column":36},"generated":{"line":55,"column":38}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":106,"column":36},"generated":{"line":55,"column":39}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":106,"column":36},"generated":{"line":55,"column":45}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":106,"column":36},"generated":{"line":55,"column":46}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":106,"column":36},"generated":{"line":55,"column":52}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":106,"column":36},"generated":{"line":55,"column":53}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":106,"column":36},"generated":{"line":55,"column":59}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":106,"column":36},"generated":{"line":55,"column":60}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":106,"column":36},"generated":{"line":55,"column":61}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":106,"column":36},"generated":{"line":55,"column":62}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":106,"column":41},"generated":{"line":55,"column":64}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":106,"column":45},"generated":{"line":55,"column":68}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":106,"column":46},"generated":{"line":55,"column":69}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":106,"column":57},"generated":{"line":55,"column":80}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":106,"column":57},"generated":{"line":55,"column":81}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":106,"column":57},"generated":{"line":55,"column":83}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":106,"column":59},"generated":{"line":56,"column":6}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":106,"column":60},"generated":{"line":56,"column":7}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":106,"column":62},"generated":{"line":56,"column":9}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":106,"column":63},"generated":{"line":56,"column":10}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":106,"column":68},"generated":{"line":56,"column":15}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":106,"column":71},"generated":{"line":56,"column":18}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":106,"column":73},"generated":{"line":57,"column":4}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":106,"column":73},"generated":{"line":57,"column":5}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":106,"column":82},"generated":{"line":57,"column":6}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":106,"column":83},"generated":{"line":57,"column":7}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":107,"column":4},"generated":{"line":58,"column":2}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":109,"column":4},"generated":{"line":59,"column":2}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":125,"column":4},"generated":{"line":75,"column":2}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":125,"column":16},"generated":{"line":75,"column":14}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":125,"column":17},"generated":{"line":75,"column":15}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":125,"column":48},"generated":{"line":75,"column":21}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":125,"column":48},"generated":{"line":75,"column":23}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":126,"column":8},"generated":{"line":76,"column":4}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":126,"column":15},"generated":{"line":76,"column":11}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":126,"column":21},"generated":{"line":76,"column":17}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":126,"column":22},"generated":{"line":76,"column":18}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":126,"column":33},"generated":{"line":76,"column":29}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":127,"column":12},"generated":{"line":76,"column":30}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":127,"column":12},"generated":{"line":76,"column":34}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":127,"column":19},"generated":{"line":76,"column":50}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":127,"column":20},"generated":{"line":76,"column":52}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":127,"column":24},"generated":{"line":76,"column":56}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":127,"column":25},"generated":{"line":76,"column":57}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":127,"column":36},"generated":{"line":76,"column":68}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":127,"column":37},"generated":{"line":76,"column":69}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":127,"column":38},"generated":{"line":76,"column":70}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":127,"column":41},"generated":{"line":76,"column":73}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":127,"column":42},"generated":{"line":76,"column":74}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":127,"column":43},"generated":{"line":76,"column":75}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":127,"column":44},"generated":{"line":76,"column":76}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":127,"column":49},"generated":{"line":76,"column":81}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":127,"column":51},"generated":{"line":76,"column":83}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":127,"column":53},"generated":{"line":76,"column":85}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":127,"column":54},"generated":{"line":76,"column":86}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":127,"column":58},"generated":{"line":76,"column":91}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":128,"column":16},"generated":{"line":77,"column":6}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":128,"column":23},"generated":{"line":77,"column":13}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":129,"column":20},"generated":{"line":77,"column":14}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":129,"column":25},"generated":{"line":77,"column":19}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":130,"column":20},"generated":{"line":77,"column":21}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":130,"column":20},"generated":{"line":77,"column":25}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":130,"column":27},"generated":{"line":77,"column":41}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":130,"column":29},"generated":{"line":77,"column":43}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":130,"column":66},"generated":{"line":77,"column":44}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":130,"column":70},"generated":{"line":77,"column":48}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":131,"column":24},"generated":{"line":78,"column":8}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":131,"column":31},"generated":{"line":78,"column":15}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":131,"column":33},"generated":{"line":78,"column":17}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":132,"column":28},"generated":{"line":78,"column":18}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":132,"column":32},"generated":{"line":78,"column":21}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":132,"column":34},"generated":{"line":78,"column":23}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":132,"column":35},"generated":{"line":78,"column":24}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":132,"column":47},"generated":{"line":78,"column":36}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":132,"column":48},"generated":{"line":78,"column":37}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":132,"column":51},"generated":{"line":78,"column":40}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":132,"column":53},"generated":{"line":78,"column":41}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":132,"column":54},"generated":{"line":78,"column":42}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":132,"column":58},"generated":{"line":78,"column":46}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":133,"column":32},"generated":{"line":79,"column":10}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":133,"column":39},"generated":{"line":79,"column":17}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":133,"column":40},"generated":{"line":79,"column":18}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":133,"column":45},"generated":{"line":79,"column":23}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":133,"column":50},"generated":{"line":79,"column":28}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":134,"column":38},"generated":{"line":79,"column":31}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":134,"column":44},"generated":{"line":79,"column":37}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":134,"column":45},"generated":{"line":79,"column":38}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":134,"column":48},"generated":{"line":79,"column":41}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":134,"column":49},"generated":{"line":79,"column":42}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":134,"column":72},"generated":{"line":79,"column":43}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":134,"column":73},"generated":{"line":79,"column":44}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":135,"column":38},"generated":{"line":79,"column":47}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":135,"column":39},"generated":{"line":79,"column":48}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":135,"column":40},"generated":{"line":79,"column":49}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":135,"column":43},"generated":{"line":79,"column":52}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":135,"column":44},"generated":{"line":79,"column":53}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":135,"column":78},"generated":{"line":79,"column":54}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":135,"column":79},"generated":{"line":79,"column":55}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":136,"column":28},"generated":{"line":80,"column":8}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":136,"column":29},"generated":{"line":80,"column":9}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":136,"column":38},"generated":{"line":80,"column":10}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":137,"column":25},"generated":{"line":80,"column":11}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":138,"column":20},"generated":{"line":81,"column":6}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":138,"column":21},"generated":{"line":81,"column":7}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":138,"column":22},"generated":{"line":81,"column":8}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":139,"column":17},"generated":{"line":81,"column":9}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":140,"column":12},"generated":{"line":82,"column":4}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":140,"column":13},"generated":{"line":82,"column":5}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":140,"column":14},"generated":{"line":82,"column":6}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":141,"column":62},"generated":{"line":82,"column":7}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":142,"column":4},"generated":{"line":83,"column":2}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":144,"column":4},"generated":{"line":84,"column":2}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":144,"column":13},"generated":{"line":84,"column":11}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":144,"column":13},"generated":{"line":84,"column":12}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":144,"column":13},"generated":{"line":84,"column":14}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":145,"column":8},"generated":{"line":85,"column":4}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":145,"column":15},"generated":{"line":85,"column":11}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":145,"column":21},"generated":{"line":85,"column":17}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":145,"column":22},"generated":{"line":85,"column":18}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":145,"column":26},"generated":{"line":85,"column":22}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":145,"column":27},"generated":{"line":85,"column":23}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":145,"column":31},"generated":{"line":85,"column":27}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":145,"column":32},"generated":{"line":85,"column":28}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":145,"column":43},"generated":{"line":85,"column":39}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":145,"column":69},"generated":{"line":85,"column":40}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":146,"column":4},"generated":{"line":86,"column":2}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":147,"column":1},"generated":{"line":88,"column":0}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":147,"column":1},"generated":{"line":88,"column":7}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":147,"column":1},"generated":{"line":88,"column":8}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":147,"column":1},"generated":{"line":88,"column":24}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":147,"column":1},"generated":{"line":88,"column":27}},{"source":"../../src/dependency-injection/PartialContainer.ts","name":null,"original":{"line":147,"column":1},"generated":{"line":88,"column":43}}],"sources":{"../../src/dependency-injection/PartialContainer.ts":"import { entries } from \"../common/entries\";\nimport { memoize, Memoized } from \"../common/memoize\";\nimport { Container } from \"./Container\";\nimport { AddService, InjectableFunction, ServicesFromTokenizedParams, ValidTokens } from \"./types\";\n\n// Using a conditional type forces TS language services to evaluate the type -- so when showing e.g. type hints, we\n// will see the mapped type instead of the AddDependencies type alias. This produces better hints.\ntype AddDependencies<ParentDependencies, Dependencies> = ParentDependencies extends any\n    ? // A mapped type produces better, more concise type hints than an intersection type.\n      {\n          [K in keyof ParentDependencies | keyof Dependencies]: K extends keyof ParentDependencies\n              ? ParentDependencies[K]\n              : K extends keyof Dependencies\n              ? Dependencies[K]\n              : never;\n      }\n    : never;\n\ntype ExcludeKey<T, U> = T extends any ? { [K in Exclude<keyof T, U>]: T[K] } : never;\n\ntype PartialInjectableFunction<\n    Params extends readonly any[],\n    Tokens extends readonly string[],\n    Token extends string,\n    Service\n> = {\n    (...args: Params): Service;\n    token: Token;\n    dependencies: Tokens;\n};\n\ntype Injectables<Services, Dependencies> = {\n    [K in keyof Services]: K extends string\n        ? InjectableFunction<Services & Dependencies, readonly ValidTokens<Services & Dependencies>[], K, Services[K]>\n        : never;\n};\n\ntype PartialContainerFactories<Services, Dependecies> = {\n    [K in keyof Services]: Memoized<(c: Container<Partial<Services> & Dependecies>) => Services[K]>;\n};\n\n/**\n * Similar to [Container], with the exception that Services may be provided to a PartialContainer which *does not*\n * contain all of that Services dependencies.\n *\n * For this to remain safe, Services can not be resolved by PartialContainer – it has no `get` method.\n *\n * Instead, the PartialContainer must be provided to a [Container] which *does* contain all the dependencies required\n * by all the Service in the PartialContainer. The resulting [Container] can then resolve these Services.\n *\n * PartialContainers are used to create a collection of Services which can then be provided via a simple one-line syntax\n * to an existing Container (which fulfills the collection's dependencies). It is an organizational tool, allowing\n * coherent groupings of Services to be defined in one place, then combined elsewhere to form a complete [Container].\n *\n * Here's an example of PartialContainer usage:\n * ```ts\n * // We can provide fooFactory, even though the PartialContainer doesn't fulfill the Bar dependency.\n * const fooFactory = Injectable('Foo', ['Bar'] as const, (bar: Bar) => new Foo(bar))\n * const partialContainer = new PartialContainer({}).provide(fooFactory)\n *\n * const barFactory = Injectable('Bar', () => new Bar())\n * const dependenciesContainer = Container.provides(barFactory)\n *\n * const combinedContainer = dependenciesContainer.provides(partialContainer)\n *\n * // We can resolve Foo, because the combined container includes Bar, so all of Foo's dependencies are now met.\n * const foo = combinedContainer.get('Foo')\n * ```\n */\n/** @internal */\nexport class PartialContainer<Services = {}, Dependencies = {}> {\n    constructor(private readonly injectables: Injectables<Services, Dependencies>) {}\n\n    /**\n     * Create a new PartialContainer which provides a Service created by the given InjectableFunction.\n     *\n     * The InjectableFunction contains metadata specifying the Token by which the created Service will be known, as well\n     * as an ordered list of Tokens to be resolved and provided to the InjectableFunction as arguments.\n     *\n     * This dependencies are allowed to be missing from the PartialContainer, but these dependencies are maintained as a\n     * parameter of the returned PartialContainer. This allows `[Container.provides]` to type check the dependencies and\n     * ensure they can be provided by the Container.\n     *\n     * @param fn A InjectableFunction, taking dependencies as arguments, which returns the Service.\n     */\n    provides<\n        AdditionalDependencies extends readonly any[],\n        Tokens extends readonly string[],\n        Token extends string,\n        Service\n    >(\n        fn: PartialInjectableFunction<AdditionalDependencies, Tokens, Token, Service>\n    ): PartialContainer<\n        AddService<Services, Token, Service>,\n        // The dependencies of the new PartialContainer are the combined dependencies of this container and the\n        // PartialInjectableFunction -- but we exclude any dependencies already provided by this container (i.e. this\n        // container's Services) as well as the new Service being provided.\n        ExcludeKey<\n            AddDependencies<\n                ExcludeKey<Dependencies, Token>,\n                ServicesFromTokenizedParams<Tokens, AdditionalDependencies>\n            >,\n            keyof Services\n        >\n    > {\n        return new PartialContainer({ ...this.injectables, [fn.token]: fn } as any);\n    }\n\n    /**\n     * In order to create a [Container], the InjectableFunctions maintained by the PartialContainer must be memoized\n     * into Factories that can resolve their dependencies and return the correct Service.\n     *\n     * In particular, this requires access to a \"parent\" Container to avoid infinite looping in cases where Service A\n     * depends on Service A – this is allowed (as long as the parent container provides Service A), but requires access\n     * to the parent Container to provide the parent implementation of Service A.\n     *\n     * This also means that Services provided by a PartialContainer to a Container via this function will always be\n     * scoped to the Container. In other words, if a PartialContainer containing Service A is provided to both\n     * Container X and Container Y, when Service A is resolved by Container X the InjectableFunction used to create\n     * Service A will be invoked – and when Service A is resolved by Container Y, the InjectableFunction will be invoked\n     * again.\n     *\n     * @param parent A [Container] which provides all the required Dependencies of this PartialContainer.\n     */\n    getFactories(parent: Container<Dependencies>): PartialContainerFactories<Services, Dependencies> {\n        return Object.fromEntries(\n            entries(this.injectables).map(([token, fn]) => {\n                return [\n                    token,\n                    memoize((c: Container<Services & Dependencies>) => {\n                        return fn(\n                            ...(fn.dependencies.map((t) => {\n                                return t === token\n                                    ? parent.get(t as keyof Dependencies)\n                                    : c.get(t as keyof Services & Dependencies);\n                            }) as any)\n                        );\n                    }),\n                ];\n            })\n        ) as PartialContainerFactories<Services, Dependencies>;\n    }\n\n    getTokens(): Array<keyof Services> {\n        return Object.keys(this.injectables) as Array<keyof Services>;\n    }\n}\n"},"lineCount":null}},"error":null,"hash":"0a9c7d9c673cee5e77f7f686f7357c22","cacheData":{"env":{}}}