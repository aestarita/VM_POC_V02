{"id":"node_modules/@snap/camera-kit/lib/dependency-injection/Container.js","dependencies":[{"name":"C:\\Users\\aesta\\Documents\\GitHub\\VM_POC_V02\\node_modules\\@snap\\camera-kit\\lib\\dependency-injection\\Container.js.map","includedInParent":true,"mtime":1689894620882},{"name":"C:\\Users\\aesta\\Documents\\GitHub\\VM_POC_V02\\package.json","includedInParent":true,"mtime":1689971043690},{"name":"C:\\Users\\aesta\\Documents\\GitHub\\VM_POC_V02\\node_modules\\@snap\\camera-kit\\package.json","includedInParent":true,"mtime":1689894620849},{"name":"../common/memoize","loc":{"line":1,"column":36,"index":36},"parent":"C:\\Users\\aesta\\Documents\\GitHub\\VM_POC_V02\\node_modules\\@snap\\camera-kit\\lib\\dependency-injection\\Container.js","resolved":"C:\\Users\\aesta\\Documents\\GitHub\\VM_POC_V02\\node_modules\\@snap\\camera-kit\\lib\\common\\memoize.js"},{"name":"./PartialContainer","loc":{"line":2,"column":33,"index":90},"parent":"C:\\Users\\aesta\\Documents\\GitHub\\VM_POC_V02\\node_modules\\@snap\\camera-kit\\lib\\dependency-injection\\Container.js","resolved":"C:\\Users\\aesta\\Documents\\GitHub\\VM_POC_V02\\node_modules\\@snap\\camera-kit\\lib\\dependency-injection\\PartialContainer.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Container = exports.CONTAINER = void 0;\nvar _memoize = require(\"../common/memoize\");\nvar _PartialContainer = require(\"./PartialContainer\");\nconst CONTAINER = \"$container\";\n/**\n * A Container of values, indexed each by a unique token, which can be used throughout CameraKit. This is how CameraKit\n * implements simple dependency injection.\n *\n * Dependency injection is a way to decouple the *use* of a dependency from the *creation* of that dependency. This\n * improves modularity and re-usability, since components only care about the *interfaces* of dependencies (since that\n * determines their use) and not about their concrete creation. New implementations of a particular dependency may be\n * provided without the need to change any of the consumers of that dependency.\n *\n * There are a few commonly-used terms used when talking about dependency injection:\n *\n *   - Container (or Injector): Maintains a registry of all available Services and understands how to create them.\n *   - Service: Anything that can be provided by the Container is called a Service – this can be a value of any type.\n *   - Token: Each Service is associated with a unique name, or Token. In order to obtain a Service from the Container,\n *     the consumer must provide the Token corresponding to that Service.\n *   - InjectableFunction: Services are created by InjectableFunctions. When adding a Service to a Container, the\n *     Service provider gives the Container a InjectableFunction which, when called will return the Service. These\n *     InjectableFunctions may themselves use other Services, which will be passed to them as arguments.\n *\n * Services are, by default, singletons – that is, each call to `get()` a particular Service will return a reference\n * to the same value. In other words, InjectableFunctions are only invoked once. If multiple instances of a Service are\n * desired, a new Container can be created using the `copy([Token])` method – passing a Token to this method forces the\n * new Container to recreate the corresponding Service (the InjectableFunction will be invoked again). We say that the\n * Service is then \"scoped\" to the new Container.\n *\n *\n * One common downside of many dependency injection implementations is that the dependency graph formed by the various\n * Services can only be validated at runtime. That is, if a dependency is missing or a circular dependency is found, the\n * developer must wait until runtime to discover the error. These errors can often be confusing and hard to debug.\n *\n * This implementation eliminates this issue by moving these sorts of errors to compile time. If an unknown dependency\n * is used in a InjectableFunction, for example, the code simply won't compile.\n *\n * To achieve this, we do lose the ability to implicitly define the dependency graph, as is common with many dependency\n * injection frameworks that employ decorators to define Services and their dependencies. Instead, the dependency graph\n * must be constructed explicitly, step-by-step, via successive calls to the `provide()` method. This is a suitable\n * trade-off for CameraKit, as there are a relatively small number of Services.\n *\n * Here's a simple example of Container usage:\n * ```ts\n * const fooFactory = Injectable('Foo', () => new Foo())\n * const barFactory = Injectable('Bar', ['Foo'] as const, (foo: Foo) => new Bar(foo))\n * const container = Container.empy()\n *   .provide(fooFactory)\n *   .provide(barFactory)\n *\n * const bar: Bar = container.get('Bar')\n * ```\n */\n/** @internal */\nexports.CONTAINER = CONTAINER;\nclass Container {\n  constructor(factories) {\n    this.factories = {};\n    for (const k in factories) {\n      const fn = factories[k];\n      if ((0, _memoize.isMemoized)(fn)) this.factories[k] = fn;else this.factories[k] = (0, _memoize.memoize)(fn);\n    }\n  }\n  static provides(fnOrContainer) {\n    // Although the `provides` method has overloads that match both members of the union type separately, it does\n    // not match the union type itself, so the compiler forces us to branch and handle each type within the union\n    // separately. (Maybe in the future the compiler will decide to infer this, but for now this is necessary.)\n    if (fnOrContainer instanceof _PartialContainer.PartialContainer) return new Container({}).provides(fnOrContainer);\n    if (fnOrContainer instanceof Container) return new Container({}).provides(fnOrContainer);\n    return new Container({}).provides(fnOrContainer);\n  }\n  /**\n   * Create a copy of this Container, optionally providing a list of Services which will be scoped to the copy.\n   *\n   * This can be useful, for example, if different parts of an application wish to use the same Service interface, but\n   * do not want to share a reference to same Service instance.\n   *\n   * Say we have a Service which manages a list of Users. Our application wishes to display two lists of Users, which\n   * may be edited independently. In this case it may be desirable to create a Container for each list component, with\n   * the UserList Service scoped to those Containers – that way, each list component gets a unique copy of the\n   * UserList Service that can be edited independently of the other.\n   *\n   * @param scopedServices A list of Tokens identifying Services which will be scoped to the new Container – that is,\n   * if those Services had already been created by the source Container, they will be re-created by their Factory\n   * functions when provided by the new Container.\n   * @returns A new copy of this Container, sharing all of this Container's Services. Services corresponding to any\n   * Tokens passed to this method will be re-created by the new Container (i.e. they become \"scoped\" to the new\n   * Container).\n   */\n  copy(scopedServices) {\n    const factories = Object.assign({}, this.factories);\n    // We \"un-memoize\" scoped Service InjectableFunctions so they will create a new copy of their Service when\n    // provided by the new Container – we re-memoize them so the new Container will itself only create one Service\n    // instance.\n    (scopedServices || []).forEach(token => {\n      factories[token] = this.factories[token].delegate;\n    });\n    return new Container(factories);\n  }\n  get(token) {\n    if (token === CONTAINER) return this;\n    const factory = this.factories[token];\n    if (!factory) {\n      throw new Error(`[Container::get] Could not find Service for Token \"${String(token)}\". This should've caused a ` + \"compile-time error. If the Token is 'undefined', check all your calls to the Injectable \" + \"function. Make sure you define dependencies using string literals or string constants that are \" + \"definitely initialized before the call to Injectable.\");\n    }\n    return factory(this);\n  }\n  run(fnOrContainer) {\n    if (fnOrContainer instanceof _PartialContainer.PartialContainer) {\n      const runnableContainer = this.provides(fnOrContainer);\n      for (const token of fnOrContainer.getTokens()) {\n        runnableContainer.get(token);\n      }\n    } else {\n      this.provides(fnOrContainer).get(fnOrContainer.token);\n    }\n    return this;\n  }\n  provides(fnOrContainer) {\n    if (fnOrContainer instanceof _PartialContainer.PartialContainer || fnOrContainer instanceof Container) {\n      const factories = fnOrContainer instanceof _PartialContainer.PartialContainer ? fnOrContainer.getFactories(this) : fnOrContainer.factories;\n      // Safety: `this.factories` and `factories` are both properly type checked, so merging them produces\n      // a Factories object with keys from both Services and AdditionalServices. The compiler is unable to\n      // infer that Factories<A> & Factories<B> == Factories<A & B>, so the cast is required.\n      return new Container(Object.assign(Object.assign({}, this.factories), factories));\n    }\n    return this.providesService(fnOrContainer);\n  }\n  providesService(fn) {\n    const token = fn.token;\n    const dependencies = fn.dependencies;\n    const factory = (0, _memoize.memoize)(container => {\n      return fn(...dependencies.map(t => {\n        // To support overwriting an already-existing service with a new implementation, it should be\n        // possibleto do `provide(A, [A], a => createNewServiceFromOld(a))` – that is, inject a dependency\n        // with the same token as this service's token.\n        //\n        // To avoid a circular dependency (in which the factory for service A depends on itself), we always\n        // use the service defined in the *parent* container (i.e. this) when injecting a dependency with\n        // the same token as the service we're providing. If we did not do this, calling `container.get(t)`\n        // would result in an infinite loop.\n        return t === token ? this.get(t) : container.get(t);\n      }));\n    });\n    // Safety: `token` and `factory` are property type checked, so extending `this.factories` produces a\n    // MaybeMemoizedFactories object with the expected set of services – but when using the spread operation to\n    // merge two objects, the compiler widens the Token type to string. So we must re-narrow via casting.\n    const factories = Object.assign(Object.assign({}, this.factories), {\n      [token]: factory\n    });\n    return new Container(factories);\n  }\n}\nexports.Container = Container;"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":0}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":4}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":12}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":15}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":22}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":8,"column":0}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":8,"column":4}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":8,"column":21}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":8,"column":24}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":8,"column":31}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":15,"column":7},"generated":{"line":9,"column":0}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":15,"column":13},"generated":{"line":9,"column":6}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":15,"column":22},"generated":{"line":9,"column":15}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":15,"column":25},"generated":{"line":9,"column":18}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":15,"column":37},"generated":{"line":9,"column":30}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":10,"column":0}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":67,"column":0},"generated":{"line":59,"column":0}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":67,"column":0},"generated":{"line":60,"column":0}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":67,"column":0},"generated":{"line":60,"column":7}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":67,"column":0},"generated":{"line":60,"column":8}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":67,"column":0},"generated":{"line":60,"column":17}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":67,"column":0},"generated":{"line":60,"column":20}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":67,"column":0},"generated":{"line":60,"column":29}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":68,"column":6},"generated":{"line":61,"column":0}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":68,"column":13},"generated":{"line":61,"column":6}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":68,"column":22},"generated":{"line":61,"column":15}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":68,"column":22},"generated":{"line":61,"column":16}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":71,"column":4},"generated":{"line":62,"column":2}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":71,"column":4},"generated":{"line":62,"column":13}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":71,"column":16},"generated":{"line":62,"column":14}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":71,"column":59},"generated":{"line":62,"column":23}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":71,"column":59},"generated":{"line":62,"column":25}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":72,"column":8},"generated":{"line":63,"column":4}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":72,"column":12},"generated":{"line":63,"column":8}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":72,"column":13},"generated":{"line":63,"column":9}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":72,"column":22},"generated":{"line":63,"column":18}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":72,"column":25},"generated":{"line":63,"column":21}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":72,"column":25},"generated":{"line":63,"column":22}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":72,"column":50},"generated":{"line":63,"column":23}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":73,"column":8},"generated":{"line":64,"column":4}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":73,"column":13},"generated":{"line":64,"column":9}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":73,"column":19},"generated":{"line":64,"column":15}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":73,"column":20},"generated":{"line":64,"column":16}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":73,"column":24},"generated":{"line":64,"column":20}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":73,"column":33},"generated":{"line":64,"column":29}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":73,"column":35},"generated":{"line":64,"column":31}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":74,"column":12},"generated":{"line":65,"column":6}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":74,"column":18},"generated":{"line":65,"column":12}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":74,"column":20},"generated":{"line":65,"column":14}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":74,"column":23},"generated":{"line":65,"column":17}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":74,"column":32},"generated":{"line":65,"column":26}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":74,"column":33},"generated":{"line":65,"column":27}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":74,"column":34},"generated":{"line":65,"column":28}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":74,"column":35},"generated":{"line":65,"column":29}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":75,"column":12},"generated":{"line":66,"column":6}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":75,"column":16},"generated":{"line":66,"column":10}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":75,"column":16},"generated":{"line":66,"column":14}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":75,"column":26},"generated":{"line":66,"column":33}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":75,"column":27},"generated":{"line":66,"column":35}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":75,"column":29},"generated":{"line":66,"column":37}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":75,"column":30},"generated":{"line":66,"column":38}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":75,"column":32},"generated":{"line":66,"column":40}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":75,"column":36},"generated":{"line":66,"column":44}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":75,"column":37},"generated":{"line":66,"column":45}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":75,"column":46},"generated":{"line":66,"column":54}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":75,"column":47},"generated":{"line":66,"column":55}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":75,"column":48},"generated":{"line":66,"column":56}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":75,"column":49},"generated":{"line":66,"column":57}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":75,"column":52},"generated":{"line":66,"column":60}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":75,"column":54},"generated":{"line":66,"column":62}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":75,"column":55},"generated":{"line":66,"column":63}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":76,"column":17},"generated":{"line":66,"column":68}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":76,"column":21},"generated":{"line":66,"column":72}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":76,"column":22},"generated":{"line":66,"column":73}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":76,"column":31},"generated":{"line":66,"column":82}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":76,"column":32},"generated":{"line":66,"column":83}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":76,"column":33},"generated":{"line":66,"column":84}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":76,"column":34},"generated":{"line":66,"column":85}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":76,"column":37},"generated":{"line":66,"column":88}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":76,"column":37},"generated":{"line":66,"column":92}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":76,"column":44},"generated":{"line":66,"column":108}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":76,"column":45},"generated":{"line":66,"column":110}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":76,"column":47},"generated":{"line":66,"column":112}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":76,"column":48},"generated":{"line":66,"column":113}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":78,"column":4},"generated":{"line":68,"column":2}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":92,"column":4},"generated":{"line":69,"column":2}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":92,"column":11},"generated":{"line":69,"column":9}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":92,"column":19},"generated":{"line":69,"column":17}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":93,"column":8},"generated":{"line":69,"column":18}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":93,"column":107},"generated":{"line":69,"column":31}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":93,"column":107},"generated":{"line":69,"column":33}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":95,"column":8},"generated":{"line":70,"column":4}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":96,"column":8},"generated":{"line":71,"column":4}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":97,"column":8},"generated":{"line":72,"column":4}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":98,"column":8},"generated":{"line":73,"column":4}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":98,"column":12},"generated":{"line":73,"column":8}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":98,"column":25},"generated":{"line":73,"column":21}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":98,"column":37},"generated":{"line":73,"column":33}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":98,"column":53},"generated":{"line":73,"column":67}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":98,"column":55},"generated":{"line":73,"column":69}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":98,"column":62},"generated":{"line":73,"column":76}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":98,"column":66},"generated":{"line":73,"column":80}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":98,"column":75},"generated":{"line":73,"column":89}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":98,"column":76},"generated":{"line":73,"column":90}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":98,"column":76},"generated":{"line":73,"column":91}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":98,"column":78},"generated":{"line":73,"column":92}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":98,"column":79},"generated":{"line":73,"column":93}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":98,"column":80},"generated":{"line":73,"column":94}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":98,"column":88},"generated":{"line":73,"column":102}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":98,"column":89},"generated":{"line":73,"column":103}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":98,"column":102},"generated":{"line":73,"column":116}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":98,"column":103},"generated":{"line":73,"column":117}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":99,"column":8},"generated":{"line":74,"column":4}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":99,"column":12},"generated":{"line":74,"column":8}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":99,"column":25},"generated":{"line":74,"column":21}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":99,"column":37},"generated":{"line":74,"column":33}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":99,"column":46},"generated":{"line":74,"column":42}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":99,"column":48},"generated":{"line":74,"column":44}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":99,"column":55},"generated":{"line":74,"column":51}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":99,"column":59},"generated":{"line":74,"column":55}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":99,"column":68},"generated":{"line":74,"column":64}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":99,"column":69},"generated":{"line":74,"column":65}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":99,"column":69},"generated":{"line":74,"column":66}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":99,"column":71},"generated":{"line":74,"column":67}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":99,"column":72},"generated":{"line":74,"column":68}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":99,"column":73},"generated":{"line":74,"column":69}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":99,"column":81},"generated":{"line":74,"column":77}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":99,"column":82},"generated":{"line":74,"column":78}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":99,"column":95},"generated":{"line":74,"column":91}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":99,"column":96},"generated":{"line":74,"column":92}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":100,"column":8},"generated":{"line":75,"column":4}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":100,"column":15},"generated":{"line":75,"column":11}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":100,"column":19},"generated":{"line":75,"column":15}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":100,"column":28},"generated":{"line":75,"column":24}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":100,"column":29},"generated":{"line":75,"column":25}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":100,"column":29},"generated":{"line":75,"column":26}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":100,"column":31},"generated":{"line":75,"column":27}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":100,"column":32},"generated":{"line":75,"column":28}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":100,"column":33},"generated":{"line":75,"column":29}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":100,"column":41},"generated":{"line":75,"column":37}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":100,"column":42},"generated":{"line":75,"column":38}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":100,"column":55},"generated":{"line":75,"column":51}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":100,"column":56},"generated":{"line":75,"column":52}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":101,"column":4},"generated":{"line":76,"column":2}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":103,"column":4},"generated":{"line":77,"column":2}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":121,"column":4},"generated":{"line":95,"column":2}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":121,"column":8},"generated":{"line":95,"column":6}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":121,"column":53},"generated":{"line":95,"column":7}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":121,"column":76},"generated":{"line":95,"column":21}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":121,"column":76},"generated":{"line":95,"column":23}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":122,"column":8},"generated":{"line":96,"column":4}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":122,"column":14},"generated":{"line":96,"column":10}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":122,"column":23},"generated":{"line":96,"column":19}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":122,"column":23},"generated":{"line":96,"column":22}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":122,"column":23},"generated":{"line":96,"column":28}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":122,"column":23},"generated":{"line":96,"column":29}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":122,"column":23},"generated":{"line":96,"column":35}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":122,"column":23},"generated":{"line":96,"column":36}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":122,"column":23},"generated":{"line":96,"column":37}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":122,"column":23},"generated":{"line":96,"column":38}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":122,"column":65},"generated":{"line":96,"column":40}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":122,"column":69},"generated":{"line":96,"column":44}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":122,"column":70},"generated":{"line":96,"column":45}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":122,"column":79},"generated":{"line":96,"column":54}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":122,"column":81},"generated":{"line":96,"column":55}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":124,"column":8},"generated":{"line":97,"column":4}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":125,"column":8},"generated":{"line":98,"column":4}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":126,"column":8},"generated":{"line":99,"column":4}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":127,"column":8},"generated":{"line":100,"column":4}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":127,"column":9},"generated":{"line":100,"column":5}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":127,"column":23},"generated":{"line":100,"column":19}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":127,"column":27},"generated":{"line":100,"column":23}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":127,"column":29},"generated":{"line":100,"column":25}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":127,"column":31},"generated":{"line":100,"column":27}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":127,"column":38},"generated":{"line":100,"column":34}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":127,"column":40},"generated":{"line":100,"column":35}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":127,"column":61},"generated":{"line":100,"column":40}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":127,"column":65},"generated":{"line":100,"column":44}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":128,"column":12},"generated":{"line":101,"column":6}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":128,"column":21},"generated":{"line":101,"column":15}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":128,"column":22},"generated":{"line":101,"column":16}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":128,"column":27},"generated":{"line":101,"column":21}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":128,"column":28},"generated":{"line":101,"column":22}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":128,"column":31},"generated":{"line":101,"column":25}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":128,"column":35},"generated":{"line":101,"column":29}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":128,"column":36},"generated":{"line":101,"column":30}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":128,"column":45},"generated":{"line":101,"column":39}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":128,"column":46},"generated":{"line":101,"column":40}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":128,"column":51},"generated":{"line":101,"column":45}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":128,"column":52},"generated":{"line":101,"column":46}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":128,"column":53},"generated":{"line":101,"column":47}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":128,"column":61},"generated":{"line":101,"column":55}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":129,"column":8},"generated":{"line":102,"column":4}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":129,"column":9},"generated":{"line":102,"column":5}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":129,"column":10},"generated":{"line":102,"column":6}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":130,"column":8},"generated":{"line":103,"column":4}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":130,"column":15},"generated":{"line":103,"column":11}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":130,"column":19},"generated":{"line":103,"column":15}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":130,"column":28},"generated":{"line":103,"column":24}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":130,"column":29},"generated":{"line":103,"column":25}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":130,"column":38},"generated":{"line":103,"column":34}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":130,"column":39},"generated":{"line":103,"column":35}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":131,"column":4},"generated":{"line":104,"column":2}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":149,"column":4},"generated":{"line":105,"column":2}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":149,"column":7},"generated":{"line":105,"column":5}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":149,"column":8},"generated":{"line":105,"column":6}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":149,"column":46},"generated":{"line":105,"column":11}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":149,"column":46},"generated":{"line":105,"column":13}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":150,"column":8},"generated":{"line":106,"column":4}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":150,"column":12},"generated":{"line":106,"column":8}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":150,"column":17},"generated":{"line":106,"column":13}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":150,"column":22},"generated":{"line":106,"column":18}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":150,"column":31},"generated":{"line":106,"column":27}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":150,"column":33},"generated":{"line":106,"column":29}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":150,"column":40},"generated":{"line":106,"column":36}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":150,"column":44},"generated":{"line":106,"column":40}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":151,"column":8},"generated":{"line":107,"column":4}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":151,"column":14},"generated":{"line":107,"column":10}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":151,"column":21},"generated":{"line":107,"column":17}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":151,"column":24},"generated":{"line":107,"column":20}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":151,"column":28},"generated":{"line":107,"column":24}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":151,"column":29},"generated":{"line":107,"column":25}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":151,"column":38},"generated":{"line":107,"column":34}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":151,"column":39},"generated":{"line":107,"column":35}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":151,"column":44},"generated":{"line":107,"column":40}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":151,"column":45},"generated":{"line":107,"column":41}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":152,"column":8},"generated":{"line":108,"column":4}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":152,"column":12},"generated":{"line":108,"column":8}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":152,"column":13},"generated":{"line":108,"column":9}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":152,"column":20},"generated":{"line":108,"column":16}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":152,"column":22},"generated":{"line":108,"column":18}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":153,"column":12},"generated":{"line":109,"column":6}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":153,"column":18},"generated":{"line":109,"column":12}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":153,"column":22},"generated":{"line":109,"column":16}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":153,"column":27},"generated":{"line":109,"column":21}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":154,"column":16},"generated":{"line":109,"column":22}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":154,"column":70},"generated":{"line":109,"column":76}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":154,"column":76},"generated":{"line":109,"column":82}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":154,"column":77},"generated":{"line":109,"column":83}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":154,"column":82},"generated":{"line":109,"column":88}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":154,"column":83},"generated":{"line":109,"column":89}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":154,"column":112},"generated":{"line":109,"column":118}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":155,"column":20},"generated":{"line":109,"column":121}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":155,"column":110},"generated":{"line":109,"column":211}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":156,"column":20},"generated":{"line":109,"column":214}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":156,"column":117},"generated":{"line":109,"column":311}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":157,"column":20},"generated":{"line":109,"column":314}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":157,"column":75},"generated":{"line":109,"column":369}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":158,"column":13},"generated":{"line":109,"column":370}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":160,"column":8},"generated":{"line":111,"column":4}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":160,"column":15},"generated":{"line":111,"column":11}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":160,"column":22},"generated":{"line":111,"column":18}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":160,"column":23},"generated":{"line":111,"column":19}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":160,"column":27},"generated":{"line":111,"column":23}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":160,"column":28},"generated":{"line":111,"column":24}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":161,"column":4},"generated":{"line":112,"column":2}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":202,"column":4},"generated":{"line":113,"column":2}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":202,"column":7},"generated":{"line":113,"column":5}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":203,"column":8},"generated":{"line":113,"column":6}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":205,"column":60},"generated":{"line":113,"column":19}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":205,"column":60},"generated":{"line":113,"column":21}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":207,"column":8},"generated":{"line":114,"column":4}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":207,"column":12},"generated":{"line":114,"column":8}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":207,"column":25},"generated":{"line":114,"column":21}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":207,"column":37},"generated":{"line":114,"column":33}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":207,"column":53},"generated":{"line":114,"column":67}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":207,"column":55},"generated":{"line":114,"column":69}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":208,"column":12},"generated":{"line":115,"column":6}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":208,"column":18},"generated":{"line":115,"column":12}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":208,"column":35},"generated":{"line":115,"column":29}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":208,"column":38},"generated":{"line":115,"column":32}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":208,"column":42},"generated":{"line":115,"column":36}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":208,"column":43},"generated":{"line":115,"column":37}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":208,"column":51},"generated":{"line":115,"column":45}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":208,"column":52},"generated":{"line":115,"column":46}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":208,"column":65},"generated":{"line":115,"column":59}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":208,"column":66},"generated":{"line":115,"column":60}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":209,"column":12},"generated":{"line":116,"column":6}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":209,"column":17},"generated":{"line":116,"column":11}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":209,"column":23},"generated":{"line":116,"column":17}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":209,"column":28},"generated":{"line":116,"column":22}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":209,"column":32},"generated":{"line":116,"column":26}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":209,"column":45},"generated":{"line":116,"column":39}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":209,"column":46},"generated":{"line":116,"column":40}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":209,"column":55},"generated":{"line":116,"column":49}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":209,"column":55},"generated":{"line":116,"column":50}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":209,"column":57},"generated":{"line":116,"column":51}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":209,"column":59},"generated":{"line":116,"column":53}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":210,"column":16},"generated":{"line":117,"column":8}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":210,"column":33},"generated":{"line":117,"column":25}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":210,"column":34},"generated":{"line":117,"column":26}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":210,"column":37},"generated":{"line":117,"column":29}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":210,"column":38},"generated":{"line":117,"column":30}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":210,"column":43},"generated":{"line":117,"column":35}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":210,"column":44},"generated":{"line":117,"column":36}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":212,"column":9},"generated":{"line":119,"column":5}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":212,"column":15},"generated":{"line":119,"column":11}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":213,"column":12},"generated":{"line":120,"column":6}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":213,"column":16},"generated":{"line":120,"column":10}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":213,"column":17},"generated":{"line":120,"column":11}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":213,"column":25},"generated":{"line":120,"column":19}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":213,"column":26},"generated":{"line":120,"column":20}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":213,"column":39},"generated":{"line":120,"column":33}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":213,"column":40},"generated":{"line":120,"column":34}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":213,"column":41},"generated":{"line":120,"column":35}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":213,"column":44},"generated":{"line":120,"column":38}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":213,"column":45},"generated":{"line":120,"column":39}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":213,"column":58},"generated":{"line":120,"column":52}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":213,"column":59},"generated":{"line":120,"column":53}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":213,"column":64},"generated":{"line":120,"column":58}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":213,"column":65},"generated":{"line":120,"column":59}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":215,"column":8},"generated":{"line":122,"column":4}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":215,"column":15},"generated":{"line":122,"column":11}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":215,"column":19},"generated":{"line":122,"column":15}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":216,"column":4},"generated":{"line":123,"column":2}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":266,"column":4},"generated":{"line":124,"column":2}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":266,"column":12},"generated":{"line":124,"column":10}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":267,"column":8},"generated":{"line":124,"column":11}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":270,"column":43},"generated":{"line":124,"column":24}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":270,"column":43},"generated":{"line":124,"column":26}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":272,"column":8},"generated":{"line":125,"column":4}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":272,"column":12},"generated":{"line":125,"column":8}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":272,"column":25},"generated":{"line":125,"column":21}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":272,"column":37},"generated":{"line":125,"column":33}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":272,"column":53},"generated":{"line":125,"column":67}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":272,"column":57},"generated":{"line":125,"column":71}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":272,"column":70},"generated":{"line":125,"column":84}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":272,"column":82},"generated":{"line":125,"column":96}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":272,"column":91},"generated":{"line":125,"column":105}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":272,"column":93},"generated":{"line":125,"column":107}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":273,"column":12},"generated":{"line":126,"column":6}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":273,"column":18},"generated":{"line":126,"column":12}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":273,"column":27},"generated":{"line":126,"column":21}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":274,"column":16},"generated":{"line":126,"column":24}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":274,"column":29},"generated":{"line":126,"column":37}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":274,"column":41},"generated":{"line":126,"column":49}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":274,"column":57},"generated":{"line":126,"column":83}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":274,"column":60},"generated":{"line":126,"column":86}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":274,"column":73},"generated":{"line":126,"column":99}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":274,"column":74},"generated":{"line":126,"column":100}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":274,"column":86},"generated":{"line":126,"column":112}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":274,"column":87},"generated":{"line":126,"column":113}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":274,"column":91},"generated":{"line":126,"column":117}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":274,"column":92},"generated":{"line":126,"column":118}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":274,"column":95},"generated":{"line":126,"column":121}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":274,"column":108},"generated":{"line":126,"column":134}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":274,"column":109},"generated":{"line":126,"column":135}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":274,"column":118},"generated":{"line":126,"column":144}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":275,"column":12},"generated":{"line":127,"column":6}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":276,"column":12},"generated":{"line":128,"column":6}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":277,"column":12},"generated":{"line":129,"column":6}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":278,"column":12},"generated":{"line":130,"column":6}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":278,"column":19},"generated":{"line":130,"column":13}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":278,"column":23},"generated":{"line":130,"column":17}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":278,"column":32},"generated":{"line":130,"column":26}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":278,"column":33},"generated":{"line":130,"column":27}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":278,"column":33},"generated":{"line":130,"column":33}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":278,"column":33},"generated":{"line":130,"column":34}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":278,"column":33},"generated":{"line":130,"column":40}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":278,"column":33},"generated":{"line":130,"column":41}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":278,"column":33},"generated":{"line":130,"column":47}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":278,"column":33},"generated":{"line":130,"column":48}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":278,"column":33},"generated":{"line":130,"column":54}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":278,"column":33},"generated":{"line":130,"column":55}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":278,"column":33},"generated":{"line":130,"column":56}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":278,"column":33},"generated":{"line":130,"column":57}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":279,"column":19},"generated":{"line":130,"column":59}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":279,"column":23},"generated":{"line":130,"column":63}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":279,"column":24},"generated":{"line":130,"column":64}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":279,"column":33},"generated":{"line":130,"column":73}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":279,"column":33},"generated":{"line":130,"column":74}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":280,"column":19},"generated":{"line":130,"column":76}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":280,"column":28},"generated":{"line":130,"column":85}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":281,"column":81},"generated":{"line":130,"column":86}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":281,"column":82},"generated":{"line":130,"column":87}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":283,"column":8},"generated":{"line":132,"column":4}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":283,"column":15},"generated":{"line":132,"column":11}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":283,"column":19},"generated":{"line":132,"column":15}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":283,"column":20},"generated":{"line":132,"column":16}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":283,"column":35},"generated":{"line":132,"column":31}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":283,"column":36},"generated":{"line":132,"column":32}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":283,"column":49},"generated":{"line":132,"column":45}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":283,"column":50},"generated":{"line":132,"column":46}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":284,"column":4},"generated":{"line":133,"column":2}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":286,"column":12},"generated":{"line":134,"column":2}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":286,"column":27},"generated":{"line":134,"column":17}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":287,"column":8},"generated":{"line":134,"column":18}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":287,"column":64},"generated":{"line":134,"column":20}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":287,"column":64},"generated":{"line":134,"column":22}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":289,"column":8},"generated":{"line":135,"column":4}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":289,"column":14},"generated":{"line":135,"column":10}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":289,"column":19},"generated":{"line":135,"column":15}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":289,"column":22},"generated":{"line":135,"column":18}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":289,"column":24},"generated":{"line":135,"column":20}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":289,"column":25},"generated":{"line":135,"column":21}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":289,"column":30},"generated":{"line":135,"column":26}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":290,"column":8},"generated":{"line":136,"column":4}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":290,"column":14},"generated":{"line":136,"column":10}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":290,"column":26},"generated":{"line":136,"column":22}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":290,"column":45},"generated":{"line":136,"column":25}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":290,"column":47},"generated":{"line":136,"column":27}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":290,"column":48},"generated":{"line":136,"column":28}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":290,"column":60},"generated":{"line":136,"column":40}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":292,"column":8},"generated":{"line":137,"column":4}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":292,"column":14},"generated":{"line":137,"column":10}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":292,"column":21},"generated":{"line":137,"column":17}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":292,"column":24},"generated":{"line":137,"column":20}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":292,"column":24},"generated":{"line":137,"column":24}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":292,"column":31},"generated":{"line":137,"column":40}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":292,"column":33},"generated":{"line":137,"column":42}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":292,"column":63},"generated":{"line":137,"column":51}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":292,"column":67},"generated":{"line":137,"column":55}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":293,"column":12},"generated":{"line":138,"column":6}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":293,"column":19},"generated":{"line":138,"column":13}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":293,"column":21},"generated":{"line":138,"column":15}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":294,"column":16},"generated":{"line":138,"column":16}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":294,"column":20},"generated":{"line":138,"column":19}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":294,"column":32},"generated":{"line":138,"column":31}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":294,"column":33},"generated":{"line":138,"column":32}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":294,"column":36},"generated":{"line":138,"column":35}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":294,"column":38},"generated":{"line":138,"column":36}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":294,"column":39},"generated":{"line":138,"column":37}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":294,"column":43},"generated":{"line":138,"column":41}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":295,"column":20},"generated":{"line":139,"column":8}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":296,"column":20},"generated":{"line":140,"column":8}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":297,"column":20},"generated":{"line":141,"column":8}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":298,"column":20},"generated":{"line":142,"column":8}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":299,"column":20},"generated":{"line":143,"column":8}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":300,"column":20},"generated":{"line":144,"column":8}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":301,"column":20},"generated":{"line":145,"column":8}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":302,"column":20},"generated":{"line":146,"column":8}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":303,"column":20},"generated":{"line":147,"column":8}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":303,"column":27},"generated":{"line":147,"column":15}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":303,"column":28},"generated":{"line":147,"column":16}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":303,"column":33},"generated":{"line":147,"column":21}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":303,"column":38},"generated":{"line":147,"column":26}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":303,"column":41},"generated":{"line":147,"column":29}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":303,"column":45},"generated":{"line":147,"column":33}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":303,"column":46},"generated":{"line":147,"column":34}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":303,"column":49},"generated":{"line":147,"column":37}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":303,"column":50},"generated":{"line":147,"column":38}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":303,"column":51},"generated":{"line":147,"column":39}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":303,"column":52},"generated":{"line":147,"column":40}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":303,"column":55},"generated":{"line":147,"column":43}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":303,"column":64},"generated":{"line":147,"column":52}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":303,"column":65},"generated":{"line":147,"column":53}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":303,"column":68},"generated":{"line":147,"column":56}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":303,"column":69},"generated":{"line":147,"column":57}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":303,"column":70},"generated":{"line":147,"column":58}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":303,"column":71},"generated":{"line":147,"column":59}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":304,"column":16},"generated":{"line":148,"column":6}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":304,"column":17},"generated":{"line":148,"column":7}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":304,"column":26},"generated":{"line":148,"column":8}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":305,"column":13},"generated":{"line":148,"column":9}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":306,"column":8},"generated":{"line":149,"column":4}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":306,"column":9},"generated":{"line":149,"column":5}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":306,"column":10},"generated":{"line":149,"column":6}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":308,"column":8},"generated":{"line":150,"column":4}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":309,"column":8},"generated":{"line":151,"column":4}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":310,"column":8},"generated":{"line":152,"column":4}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":311,"column":8},"generated":{"line":153,"column":4}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":311,"column":14},"generated":{"line":153,"column":10}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":311,"column":23},"generated":{"line":153,"column":19}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":311,"column":23},"generated":{"line":153,"column":22}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":311,"column":23},"generated":{"line":153,"column":28}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":311,"column":23},"generated":{"line":153,"column":29}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":311,"column":23},"generated":{"line":153,"column":35}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":311,"column":23},"generated":{"line":153,"column":36}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":311,"column":23},"generated":{"line":153,"column":42}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":311,"column":23},"generated":{"line":153,"column":43}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":311,"column":23},"generated":{"line":153,"column":49}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":311,"column":23},"generated":{"line":153,"column":50}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":311,"column":23},"generated":{"line":153,"column":51}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":311,"column":23},"generated":{"line":153,"column":52}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":311,"column":31},"generated":{"line":153,"column":54}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":311,"column":35},"generated":{"line":153,"column":58}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":311,"column":36},"generated":{"line":153,"column":59}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":311,"column":45},"generated":{"line":153,"column":68}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":311,"column":45},"generated":{"line":153,"column":69}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":311,"column":45},"generated":{"line":153,"column":71}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":311,"column":47},"generated":{"line":154,"column":6}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":311,"column":48},"generated":{"line":154,"column":7}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":311,"column":53},"generated":{"line":154,"column":12}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":311,"column":56},"generated":{"line":154,"column":15}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":311,"column":63},"generated":{"line":155,"column":4}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":311,"column":63},"generated":{"line":155,"column":5}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":311,"column":65},"generated":{"line":155,"column":6}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":312,"column":8},"generated":{"line":156,"column":4}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":312,"column":15},"generated":{"line":156,"column":11}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":312,"column":19},"generated":{"line":156,"column":15}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":312,"column":28},"generated":{"line":156,"column":24}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":312,"column":29},"generated":{"line":156,"column":25}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":312,"column":113},"generated":{"line":156,"column":34}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":312,"column":114},"generated":{"line":156,"column":35}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":313,"column":4},"generated":{"line":157,"column":2}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":314,"column":1},"generated":{"line":159,"column":0}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":314,"column":1},"generated":{"line":159,"column":7}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":314,"column":1},"generated":{"line":159,"column":8}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":314,"column":1},"generated":{"line":159,"column":17}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":314,"column":1},"generated":{"line":159,"column":20}},{"source":"../../src/dependency-injection/Container.ts","name":null,"original":{"line":314,"column":1},"generated":{"line":159,"column":29}}],"sources":{"../../src/dependency-injection/Container.ts":"import { isMemoized, memoize, Memoized } from \"../common/memoize\";\nimport { PartialContainer } from \"./PartialContainer\";\nimport { AddService, InjectableFunction, ValidTokens } from \"./types\";\n\ntype MaybeMemoizedFactories<Services> = {\n    [K in keyof Services]:\n        | ((c: Container<Services>) => Services[K])\n        | Memoized<(c: Container<Services>) => Services[K]>;\n};\n\nexport type Factories<Services> = {\n    [K in keyof Services]: Memoized<(c: Container<Services>) => Services[K]>;\n};\n\nexport const CONTAINER = \"$container\";\nexport type ContainerToken = typeof CONTAINER;\n\n/**\n * A Container of values, indexed each by a unique token, which can be used throughout CameraKit. This is how CameraKit\n * implements simple dependency injection.\n *\n * Dependency injection is a way to decouple the *use* of a dependency from the *creation* of that dependency. This\n * improves modularity and re-usability, since components only care about the *interfaces* of dependencies (since that\n * determines their use) and not about their concrete creation. New implementations of a particular dependency may be\n * provided without the need to change any of the consumers of that dependency.\n *\n * There are a few commonly-used terms used when talking about dependency injection:\n *\n *   - Container (or Injector): Maintains a registry of all available Services and understands how to create them.\n *   - Service: Anything that can be provided by the Container is called a Service – this can be a value of any type.\n *   - Token: Each Service is associated with a unique name, or Token. In order to obtain a Service from the Container,\n *     the consumer must provide the Token corresponding to that Service.\n *   - InjectableFunction: Services are created by InjectableFunctions. When adding a Service to a Container, the\n *     Service provider gives the Container a InjectableFunction which, when called will return the Service. These\n *     InjectableFunctions may themselves use other Services, which will be passed to them as arguments.\n *\n * Services are, by default, singletons – that is, each call to `get()` a particular Service will return a reference\n * to the same value. In other words, InjectableFunctions are only invoked once. If multiple instances of a Service are\n * desired, a new Container can be created using the `copy([Token])` method – passing a Token to this method forces the\n * new Container to recreate the corresponding Service (the InjectableFunction will be invoked again). We say that the\n * Service is then \"scoped\" to the new Container.\n *\n *\n * One common downside of many dependency injection implementations is that the dependency graph formed by the various\n * Services can only be validated at runtime. That is, if a dependency is missing or a circular dependency is found, the\n * developer must wait until runtime to discover the error. These errors can often be confusing and hard to debug.\n *\n * This implementation eliminates this issue by moving these sorts of errors to compile time. If an unknown dependency\n * is used in a InjectableFunction, for example, the code simply won't compile.\n *\n * To achieve this, we do lose the ability to implicitly define the dependency graph, as is common with many dependency\n * injection frameworks that employ decorators to define Services and their dependencies. Instead, the dependency graph\n * must be constructed explicitly, step-by-step, via successive calls to the `provide()` method. This is a suitable\n * trade-off for CameraKit, as there are a relatively small number of Services.\n *\n * Here's a simple example of Container usage:\n * ```ts\n * const fooFactory = Injectable('Foo', () => new Foo())\n * const barFactory = Injectable('Bar', ['Foo'] as const, (foo: Foo) => new Bar(foo))\n * const container = Container.empy()\n *   .provide(fooFactory)\n *   .provide(barFactory)\n *\n * const bar: Bar = container.get('Bar')\n * ```\n */\n/** @internal */\nexport class Container<Services = {}> {\n    private readonly factories: Factories<Services>;\n\n    constructor(factories: MaybeMemoizedFactories<Services>) {\n        this.factories = {} as Factories<Services>;\n        for (const k in factories) {\n            const fn = factories[k];\n            if (isMemoized(fn)) this.factories[k] = fn;\n            else this.factories[k] = memoize(fn);\n        }\n    }\n\n    /**\n     * Create a new [Container] by providing a [PartialContainer] that has no dependencies.\n     */\n    static provides<Services>(container: PartialContainer<Services, {}> | Container<Services>): Container<Services>;\n\n    /**\n     * Create a new [Container] by providing a Service that has no dependencies.\n     */\n    static provides<Token extends string, Service>(\n        fn: InjectableFunction<{}, [], Token, Service>\n    ): Container<AddService<{}, Token, Service>>;\n\n    static provides(\n        fnOrContainer: InjectableFunction<{}, [], string, any> | PartialContainer<any, {}> | Container<any>\n    ): Container<any> {\n        // Although the `provides` method has overloads that match both members of the union type separately, it does\n        // not match the union type itself, so the compiler forces us to branch and handle each type within the union\n        // separately. (Maybe in the future the compiler will decide to infer this, but for now this is necessary.)\n        if (fnOrContainer instanceof PartialContainer) return new Container({}).provides(fnOrContainer);\n        if (fnOrContainer instanceof Container) return new Container({}).provides(fnOrContainer);\n        return new Container({}).provides(fnOrContainer);\n    }\n\n    /**\n     * Create a copy of this Container, optionally providing a list of Services which will be scoped to the copy.\n     *\n     * This can be useful, for example, if different parts of an application wish to use the same Service interface, but\n     * do not want to share a reference to same Service instance.\n     *\n     * Say we have a Service which manages a list of Users. Our application wishes to display two lists of Users, which\n     * may be edited independently. In this case it may be desirable to create a Container for each list component, with\n     * the UserList Service scoped to those Containers – that way, each list component gets a unique copy of the\n     * UserList Service that can be edited independently of the other.\n     *\n     * @param scopedServices A list of Tokens identifying Services which will be scoped to the new Container – that is,\n     * if those Services had already been created by the source Container, they will be re-created by their Factory\n     * functions when provided by the new Container.\n     * @returns A new copy of this Container, sharing all of this Container's Services. Services corresponding to any\n     * Tokens passed to this method will be re-created by the new Container (i.e. they become \"scoped\" to the new\n     * Container).\n     */\n    copy<Tokens extends readonly (keyof Services)[]>(scopedServices?: Tokens): Container<Services> {\n        const factories: MaybeMemoizedFactories<Services> = { ...this.factories };\n\n        // We \"un-memoize\" scoped Service InjectableFunctions so they will create a new copy of their Service when\n        // provided by the new Container – we re-memoize them so the new Container will itself only create one Service\n        // instance.\n        (scopedServices || []).forEach((token: keyof Services) => {\n            factories[token] = this.factories[token].delegate;\n        });\n        return new Container(factories);\n    }\n\n    /**\n     * Gets a reference to this Container.\n     *\n     * @param token The CONTAINER token.\n     * @returns This Container.\n     */\n    get(token: ContainerToken): this;\n\n    /**\n     * Get a specific Service provided by this Container.\n     *\n     * @param token A unique string corresponding to a Service\n     * @returns A Service corresponding to the given Token.\n     */\n    get<Token extends keyof Services>(token: Token): Services[Token];\n\n    get(token: ContainerToken | keyof Services): this | Services[keyof Services] {\n        if (token === CONTAINER) return this;\n        const factory = this.factories[token];\n        if (!factory) {\n            throw new Error(\n                `[Container::get] Could not find Service for Token \"${String(token)}\". This should've caused a ` +\n                    \"compile-time error. If the Token is 'undefined', check all your calls to the Injectable \" +\n                    \"function. Make sure you define dependencies using string literals or string constants that are \" +\n                    \"definitely initialized before the call to Injectable.\"\n            );\n        }\n        return factory(this);\n    }\n\n    /**\n     * Run the services in this [PartialContainer]. \"Run\" simply means that [Container::get] will be called for each\n     * Service, which invokes that Service's factory function, creating the Service.\n     *\n     * This may be useful e.g. if services need to initialize themselves, since generally a Service factory is only\n     * invoked when the Service is needed.\n     *\n     * Note this method cannot be used to add services to a Container. – that is, calling this method does not provide\n     * the services in a new Container.\n     *\n     * @param container Optionally provide a [PartialContainer], which will be used as a filter – the only services\n     * from *this* container that will run are those with a token that is also present in this PartialContainer.\n     * @returns No mutation is done to the Container, it is returned as-is (convenient for chaining).\n     */\n    run<AdditionalServices, Dependencies, FulfilledDependencies extends Dependencies>(\n        // FullfilledDependencies is assignable to Dependencies -- by specifying Container<FulfilledDependencies> as the\n        // `this` type, we ensure this Container can provide all the Dependencies required by the PartialContainer.\n        this: Container<FulfilledDependencies>,\n        container: PartialContainer<AdditionalServices, Dependencies>\n    ): this;\n\n    /**\n     * Run the given Service. \"Run\" simply means that [Container::get] will be called for this Service, which invokes\n     * the Service's factory function, creating the Service.\n     *\n     * This may be useful e.g. if services need to initialize themselves, since generally a Service factory is only\n     * invoked when the Service is needed.\n     *\n     * Note this method cannot be used to add services to a Container. – that is, calling this method does not provide\n     * the services in a new Container.\n     *\n     * @param fn Optionally provide an [InjectableFunction], which will be used as a filter – the only services\n     * from *this* container that will run are those with a token that is also present in this PartialContainer.\n     * @returns No mutation is done to the Container, it is returned as-is (convenient for chaining).\n     */\n    run<Token extends string, Tokens extends readonly ValidTokens<Services>[], Service>(\n        fn: InjectableFunction<Services, Tokens, Token, Service>\n    ): this;\n\n    run<Token extends string, Tokens extends readonly ValidTokens<Services>[], Service, AdditionalServices>(\n        fnOrContainer:\n            | InjectableFunction<Services, Tokens, Token, Service>\n            | PartialContainer<AdditionalServices, Services>\n    ): this {\n        if (fnOrContainer instanceof PartialContainer) {\n            const runnableContainer = this.provides(fnOrContainer);\n            for (const token of fnOrContainer.getTokens()) {\n                runnableContainer.get(token);\n            }\n        } else {\n            this.provides(fnOrContainer).get(fnOrContainer.token);\n        }\n        return this;\n    }\n\n    /**\n     * Create a new Container from this Container with additional services from a given [PartialContainer].\n     *\n     * Services in the provided PartialContainer take precedence if there are service token conflicts.\n     *\n     * Services from the provided PartialContainer become scoped to the new Container – that is, if PartialContainer A\n     * is provided to Container X and Container Y, each resultant Container will contain its own copy of the services\n     * from PartialContainer A.\n     *\n     * @param container A [PartialContainer] providing additional services.\n     */\n    provides<AdditionalServices, Dependencies, FulfilledDependencies extends Dependencies>(\n        // FullfilledDependencies is assignable to Dependencies -- by specifying Container<FulfilledDependencies> as the\n        // `this` type, we ensure this Container can provide all the Dependencies required by the PartialContainer.\n        this: Container<FulfilledDependencies>,\n        container: PartialContainer<AdditionalServices, Dependencies>\n    ): Container<Services & AdditionalServices>;\n\n    /**\n     * Creates a new Container from this Container with additional services from another Container.\n     *\n     * Services in the provided PartialContainer take precedence if there are service token conflicts.\n     *\n     * Services from the provided Container become scoped to both Containers (the one from which they were provided\n     * and the new Container returned by this method) - that is, if Container A is provided to Container B,\n     * they will share the same instances of any Services provided by Container A.\n     * If Container B should re-create new instances of the Services from Container A,\n     * Container A must first be copied before providing it here.\n     *\n     * @param container A [Container] providing additional services.\n     */\n    provides<AdditionalServices>(container: Container<AdditionalServices>): Container<Services & AdditionalServices>;\n\n    /**\n     * Create a new Container which provides a Service created by the given [InjectableFunction].\n     *\n     * The InjectableFunction contains metadata specifying the Token by which the created Service will be known, as well\n     * as an ordered list of Tokens to be resolved and provided to the InjectableFunction as arguments.\n     *\n     * If any of these required dependencies are missing from the Container (or if there is a mismatch between the types\n     * of those dependencies and the arguments of the InjectableFunction), a compiler error will be raised.\n     *\n     * @param fn A factory function, taking dependencies as arguments, which returns the Service.\n     */\n    provides<Token extends string, Tokens extends readonly ValidTokens<Services>[], Service>(\n        fn: InjectableFunction<Services, Tokens, Token, Service>\n    ): Container<AddService<Services, Token, Service>>;\n\n    provides<Token extends string, Tokens extends readonly ValidTokens<Services>[], Service, AdditionalServices>(\n        fnOrContainer:\n            | InjectableFunction<Services, Tokens, Token, Service>\n            | PartialContainer<AdditionalServices, Services>\n            | Container<AdditionalServices>\n    ): Container<any> {\n        if (fnOrContainer instanceof PartialContainer || fnOrContainer instanceof Container) {\n            const factories =\n                fnOrContainer instanceof PartialContainer ? fnOrContainer.getFactories(this) : fnOrContainer.factories;\n            // Safety: `this.factories` and `factories` are both properly type checked, so merging them produces\n            // a Factories object with keys from both Services and AdditionalServices. The compiler is unable to\n            // infer that Factories<A> & Factories<B> == Factories<A & B>, so the cast is required.\n            return new Container({\n                ...this.factories,\n                ...factories,\n            } as unknown as MaybeMemoizedFactories<Services & AdditionalServices>);\n        }\n        return this.providesService(fnOrContainer);\n    }\n\n    private providesService<Token extends string, Tokens extends readonly ValidTokens<Services>[], Service>(\n        fn: InjectableFunction<Services, Tokens, Token, Service>\n    ): Container<AddService<Services, Token, Service>> {\n        const token = fn.token;\n        const dependencies: readonly any[] = fn.dependencies;\n\n        const factory = memoize((container: Container<Services>) => {\n            return fn(\n                ...(dependencies.map((t) => {\n                    // To support overwriting an already-existing service with a new implementation, it should be\n                    // possibleto do `provide(A, [A], a => createNewServiceFromOld(a))` – that is, inject a dependency\n                    // with the same token as this service's token.\n                    //\n                    // To avoid a circular dependency (in which the factory for service A depends on itself), we always\n                    // use the service defined in the *parent* container (i.e. this) when injecting a dependency with\n                    // the same token as the service we're providing. If we did not do this, calling `container.get(t)`\n                    // would result in an infinite loop.\n                    return t === token ? this.get(t) : container.get(t);\n                }) as any)\n            );\n        });\n\n        // Safety: `token` and `factory` are property type checked, so extending `this.factories` produces a\n        // MaybeMemoizedFactories object with the expected set of services – but when using the spread operation to\n        // merge two objects, the compiler widens the Token type to string. So we must re-narrow via casting.\n        const factories = { ...this.factories, [token]: factory };\n        return new Container(factories as unknown as MaybeMemoizedFactories<AddService<Services, Token, Service>>);\n    }\n}\n"},"lineCount":null}},"error":null,"hash":"80e84389b72f08768cde632aebe27d7e","cacheData":{"env":{}}}